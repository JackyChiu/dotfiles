##############################
#####   JackyChiu       ######
#####   khd Dotfile     ######
##############################

# NOTE(koekeishiya): A bind is written in the form:
#                   <keysym> [!] [<app list>] [->] : <command>
#                   where
#                       <keysym>   = mode + mod + ... + mod - literal
#
#                       <keysym>   = mode + mod + ... + mod - keycode
#                                    keycode must have 0x prefix
#
#                       <keysym>   = mode + mod + ... + mod - button#
#                                    replace '#' with mouse-button id; id >= 3
#
#                       modifier only binding
#                       <keysym>   = mode + mod + ... + mod
#
#                       literal only binding
#                       <keysym>   = - literal
#
#                       keycode only binding
#                       <keysym>   = - keycode
#
#                       [<app,
#                         app,     = optional list '[app1, ..., appN]' of applications
#                         app>]      that this bind will be activated for. if the
#                                    focused application is not contained in this list,
#                                    the associated command will not be triggered, and
#                                    the keypress will be passed through as normal.
#
#                       [!]        = optional operator '!' negates the behaviour when a
#                                    list of applications is given. this marks the bind
#                                    as 'Hotkey_Exclude', causing the bind to not work
#                                    when the focused application is in the given list.
#
#                       [->]       = optional operator '->' that marks this bind as
#                                    'passthrough'. this causes the key to be passed
#                                    through to the system, instead of being consumed.
#
#                       <command>  = command is executed through '$SHELL -c' and
#                                    follows valid shell syntax. if the $SHELL environment
#                                    variable is not set, it will default to '/bin/bash'.
#                                    when bash is used, the ';' delimeter can be specified
#                                    to chain commands.
#
#                                    to allow a command to extend into multiple lines,
#                                    prepend '\' at the end of the previous line.
#
#                                    an EOL character signifies the end of the bind.

# NOTE(koekeishiya) Example of passthrough
# cmd - m -> : echo "alert and minimize window" | alerter -title Test passthrough -timeout 2

# NOTE(koekeishiya) Example of app list
# alt - e [
#           iTerm2,
#           Terminal,
#           HyperTerm
#         ]
#         : echo "so this is how deep the rabbit hole goes.." |\
#           alerter -title Test passthrough -timeout 2

# NOTE(koekeishiya) Example of negated app list
# alt - e [
#           iTerm2,
#           Terminal,
#           HyperTerm
#         ] !
#         : echo "blue pill, i choose you!" |\
#           alerter -title Test passthrough -timeout 2

# NOTE(koekeishiya) Modifier only binding
# left shift    -> (    right shift   -> )
# left cmd      -> {    right cmd     -> }

# khd mod_trigger_timeout 0.1
# lshift : khd -p "shift - 8"
# rshift : khd -p "shift - 9"
# lcmd   : khd -p "shift + alt - 8"
# rcmd   : khd -p "shift + alt - 9"

# NOTE(koekeishiya) Bind mouse-buttons
# - button3 : khd -w "mouse-button 3 pressed"
# - button4 : khd -w "mouse-button 4 pressed"

# TODO(koekeishiya): possibly allow combined syntax such as
# [focus,ytd] + ctrl - f : khd -e "mode activate default"

# vi-mode for non-terminal applications

# remap left-control h/j/k/l -> arrow keys
ctrl - h         ![Alacritty,iTerm2]      :   khd -p "- left"
ctrl - j         ![Alacritty,iTerm2]      :   khd -p "- down"
ctrl - k         ![Alacritty,iTerm2]      :   khd -p "- up"
ctrl - l         ![Alacritty,iTerm2]      :   khd -p "- right"

# remap left-control 0 / 4   -> start / end of line
ctrl - 0         ![Alacritty,iTerm2]      :   khd -p "cmd - left"
ctrl - 4         ![Alacritty,iTerm2]      :   khd -p "cmd - right"
# remap left-control g / G   -> start / end of text
ctrl - g         ![Alacritty,iTerm2]      :   khd -p "cmd - up"
ctrl + shift - g ![Alacritty,iTerm2]      :   khd -p "cmd - down"

shift + ctrl - 0 ![Alacritty,iTerm2]      :   khd -p "shift + cmd - left"
shift + ctrl - 4 ![Alacritty,iTerm2]      :   khd -p "shift + cmd - right"

# remap left-control b / e   -> start / end of word
ctrl - b         ![Alacritty,iTerm2]      :   khd -p "alt - left"
ctrl - e         ![Alacritty,iTerm2]      :   khd -p "alt - right"

shift + ctrl - b ![Alacritty,iTerm2]      :   khd -p "shift + alt - left"
shift + ctrl - e ![Alacritty,iTerm2]      :   khd -p "shift + alt - right"

# undo
crtl - u         ![Alacritty,iTerm2]      :   khd -p "cmd - z"

ctrl - space ![Alacritty] : open /Applications/Alacritty.app

# set border color for different modes
khd mode default  on_enter yabai -m config active_window_border_color 0xdd81a1c1  #blue
khd mode focus    on_enter yabai -m config active_window_border_color 0xddeacb8a #yellow
khd mode swap     on_enter yabai -m config active_window_border_color 0xddb48dac #purple
khd mode layout   on_enter yabai -m config active_window_border_color 0xddbf6069 #red

# toggle between modes
ctrl - s                :   khd -e "mode activate focus"
focus + ctrl - s        :   khd -e "mode activate default"
swap + ctrl - s         :   khd -e "mode activate default"
layout + ctrl - s       :   khd -e "mode activate default"

focus - s               :   khd -e "mode activate swap"
focus - a               :   khd -e "mode activate layout"

layout - a              :   khd -e "mode activate focus"
swap - s                :   khd -e "mode activate focus"

### focus mode ###
focus - r               :   khd -e "reload" # reload config

# focus windows
focus - h               :   yabai -m window --focus west
focus - l               :   yabai -m window --focus east
focus - j               :   yabai -m window --focus south
focus - k               :   yabai -m window --focus north
focus - n               :   yabai -m window --focus next
focus - p               :   yabai -m window --focus prev

# focus monitors
focus - 1               :   yabai -m display --focus 1
focus - 2               :   yabai -m display --focus 2

# full screen
focus - f               :   yabai -m window --toggle native-fullscreen; khd -e "mode activate default"

### swap mode ###
# swap windows
swap - h                :   yabai -m window --swap west
swap - j                :   yabai -m window --swap south
swap - k                :   yabai -m window --swap north
swap - l                :   yabai -m window --swap east

swap - r                :   yabai -m space --rotate 90

# swap monitors
swap - 1                :   yabai -m window --display 1; yabai -m display --focus 1
swap - 2                :   yabai -m window --display 2; yabai -m display --focus 2

# swap desktops
swap + shift - 1         :   yabai -m window --space 1; khd -p "ctrl - 1"
swap + shift - 2         :   yabai -m window --space 2; khd -p "ctrl - 2"

### layout mode ###
# switch layout
layout - b               :   yabai -m space --layout bsp;     khd -e "mode activate default"
layout - m               :   yabai -m window --toggle zoom-fullscreen; khd -e "mode activate default"
layout - f               :   yabai -m space --layout float;   khd -e "mode activate default"

layout - p               :   yabai -m space --padding rel:6:6:10:10
layout + shift - p       :   yabai -m space --padding rel:-6:-6:-10:-10
