##############################
#####   JackyChiu       ######
#####   khd Dotfile     ######
##############################

# NOTE(koekeishiya): A bind is written in the form:
#                   <keysym> [!] [<app list>] [->] : <command>
#                   where
#                       <keysym>   = mode + mod + ... + mod - literal
#
#                       <keysym>   = mode + mod + ... + mod - keycode
#                                    keycode must have 0x prefix
#
#                       <keysym>   = mode + mod + ... + mod - button#
#                                    replace '#' with mouse-button id; id >= 3
#
#                       modifier only binding
#                       <keysym>   = mode + mod + ... + mod
#
#                       literal only binding
#                       <keysym>   = - literal
#
#                       keycode only binding
#                       <keysym>   = - keycode
#
#                       [<app,
#                         app,     = optional list '[app1, ..., appN]' of applications
#                         app>]      that this bind will be activated for. if the
#                                    focused application is not contained in this list,
#                                    the associated command will not be triggered, and
#                                    the keypress will be passed through as normal.
#
#                       [!]        = optional operator '!' negates the behaviour when a
#                                    list of applications is given. this marks the bind
#                                    as 'Hotkey_Exclude', causing the bind to not work
#                                    when the focused application is in the given list.
#
#                       [->]       = optional operator '->' that marks this bind as
#                                    'passthrough'. this causes the key to be passed
#                                    through to the system, instead of being consumed.
#
#                       <command>  = command is executed through '$SHELL -c' and
#                                    follows valid shell syntax. if the $SHELL environment
#                                    variable is not set, it will default to '/bin/bash'.
#                                    when bash is used, the ';' delimeter can be specified
#                                    to chain commands.
#
#                                    to allow a command to extend into multiple lines,
#                                    prepend '\' at the end of the previous line.
#
#                                    an EOL character signifies the end of the bind.

# NOTE(koekeishiya) Example of passthrough
# cmd - m -> : echo "alert and minimize window" | alerter -title Test passthrough -timeout 2

# NOTE(koekeishiya) Example of app list
# alt - e [
#           iTerm2,
#           Terminal,
#           HyperTerm
#         ]
#         : echo "so this is how deep the rabbit hole goes.." |\
#           alerter -title Test passthrough -timeout 2

# NOTE(koekeishiya) Example of negated app list
# alt - e [
#           iTerm2,
#           Terminal,
#           HyperTerm
#         ] !
#         : echo "blue pill, i choose you!" |\
#           alerter -title Test passthrough -timeout 2

# NOTE(koekeishiya) Modifier only binding
# left shift    -> (    right shift   -> )
# left cmd      -> {    right cmd     -> }

# khd mod_trigger_timeout 0.1
# lshift : khd -p "shift - 8"
# rshift : khd -p "shift - 9"
# lcmd   : khd -p "shift + alt - 8"
# rcmd   : khd -p "shift + alt - 9"

# NOTE(koekeishiya) Bind mouse-buttons
# - button3 : khd -w "mouse-button 3 pressed"
# - button4 : khd -w "mouse-button 4 pressed"

# TODO(koekeishiya): possibly allow combined syntax such as
# [switcher,ytd] + ctrl - f : khd -e "mode activate default"



# vi-mode for non-terminal applications

# remap left-control h/j/k/l -> arrow keys
lctrl - h         ![HyperTerm,Terminal,iTerm2]      :   khd -p "- left"
lctrl - j         ![HyperTerm,Terminal,iTerm2]      :   khd -p "- down"
lctrl - k         ![HyperTerm,Terminal,iTerm2]      :   khd -p "- up"
lctrl - l         ![HyperTerm,Terminal,iTerm2]      :   khd -p "- right"

# remap left-control 0 / 4   -> start / end of line
lctrl - 0         ![HyperTerm,Terminal,iTerm2]      :   khd -p "cmd - left"
lctrl - 4         ![HyperTerm,Terminal,iTerm2]      :   khd -p "cmd - right"
# remap left-control g / G   -> start / end of text
lctrl - g         ![HyperTerm,Terminal,iTerm2]      :   khd -p "cmd - up"
lctrl + shift - g ![HyperTerm,Terminal,iTerm2]      :   khd -p "cmd - down"

shift + lctrl - 0 ![HyperTerm,Terminal,iTerm2]      :   khd -p "shift + cmd - left"
shift + lctrl - 4 ![HyperTerm,Terminal,iTerm2]      :   khd -p "shift + cmd - right"

# remap left-control b / e   -> start / end of word
lctrl - b         ![HyperTerm,Terminal,iTerm2]      :   khd -p "alt - left"
lctrl - e         ![HyperTerm,Terminal,iTerm2]      :   khd -p "alt - right"

shift + lctrl - b ![HyperTerm,Terminal,iTerm2]      :   khd -p "shift + alt - left"
shift + lctrl - e ![HyperTerm,Terminal,iTerm2]      :   khd -p "shift + alt - right"

# remap left-control x       -> forward delete
lctrl - x         ![HyperTerm,Terminal,iTerm2]      :   khd -p "- delete"

# undo
lcrtl - u ![HyperTerm,Terminal,iTerm2] : khd -p "cmd - z"

# enable kwm compatibility mode
khd kwm on

# set border color for different modes
khd mode default color 0xdd72bef2 #Blue
khd mode switcher color 0xdddbaa79 #Yellow
khd mode swap color 0xddd291e4 #Purple
khd mode space color 0xddb16286 #Red

# toggle between modes
ctrl - s                :   khd -e "mode activate switcher"
switcher + ctrl - s     :   khd -e "mode activate default"
swap + ctrl - s         :   khd -e "mode activate default"
space + ctrl - s        :   khd -e "mode activate default"

switcher - s            :   khd -e "mode activate swap"
switcher - a            :   khd -e "mode activate space"

space - a               :   khd -e "mode activate switcher"
swap - s                :   khd -e "mode activate switcher"

# switcher mode
switcher - r            :   khd -e "reload" # reload config

switcher - h            :   kwmc window -f west
switcher - l            :   kwmc window -f east
switcher - j            :   kwmc window -f south
switcher - k            :   kwmc window -f north
switcher - n            :   kwmc window -f next
switcher - p            :   kwmc window -f prev

switcher - 1    :   kwmc display -f 0
switcher - 2    :   kwmc display -f 1

# swap mode
swap - h                :   kwmc window -s west
swap - j                :   kwmc window -s south
swap - k                :   kwmc window -s north
swap - l                :   kwmc window -s east

swap - 1        :   kwmc window -m display 0
swap - 2        :   kwmc window -m display 1

# space mode
space - b               :   kwmc space -t bsp
space - m               :   kwmc space -t monocle
space - p               :   kwmc space -p increase all
space + shift - p       :   kwmc space -p decrease all
